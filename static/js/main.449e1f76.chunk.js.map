{"version":3,"sources":["App.module.css","components/Section/index.jsx","components/Form/Input/index.jsx","components/Form/Button/index.jsx","components/Form/index.js","components/List/index.jsx","App.js","index.js"],"names":["module","exports","Section","children","title","Input","this","props","name","changeInputForFilter","changeInput","value","arr","splice","toUpperCase","htmlFor","onChange","type","id","Component","Button","text","deleteContact","onClick","Form","state","number","evt","setState","prevState","target","addContact","onSubmit","List","contacts","filter","length","contact","toLowerCase","includes","map","el","App","idOfEl","find","index","console","log","preventDefault","uuidv4","undefined","alert","prevProps","localStorage","setItem","JSON","stringify","getItem","parse","className","styles","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.449e1f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      <section>{children}</section>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\n\nexport class Input extends Component {\n  render() {\n    const { name, changeInputForFilter, changeInput, value } = this.props;\n    const arr = [...name];\n    arr.splice(0, 1, arr[0].toUpperCase());\n    return (\n      <>\n        <label htmlFor={name}>{arr}</label>\n        <input\n          onChange={name === \"filter\" ? changeInputForFilter : changeInput}\n          type=\"text\"\n          id={name}\n          value={value}\n        />\n      </>\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, deleteContact, id }) => {\n  return (\n    <>\n      <button\n        id={deleteContact ? id : null}\n        onClick={deleteContact ? () => deleteContact(id) : null}\n        type=\"submit\"\n      >\n        {text}\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  changeInput = (evt) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [evt.target.id]: evt.target.value,\n      };\n    });\n  };\n  render() {\n    const { addContact } = this.props;\n    return (\n      <form\n        onSubmit={(evt) => {\n          this.setState({ name: \"\", number: \"\" });\n          return addContact(evt, this.state);\n        }}\n      >\n        <Input\n          name=\"name\"\n          changeInput={this.changeInput}\n          value={this.state.name}\n        />\n        <Input\n          name=\"number\"\n          changeInput={this.changeInput}\n          value={this.state.number}\n        />\n        <Button state={this.state} text=\"Add contact\" addContact={addContact} />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Form/Button\";\nconst List = ({ contacts, filter, deleteContact }) => {\n  if (filter.length > 0) {\n    contacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  return (\n    <ul>\n      {contacts.map((el) => {\n        return (\n          <li key={el.id}>\n            <span>{el.name}</span>: <span>{el.number} </span>\n            <Button deleteContact={deleteContact} text=\"Delete\" id={el.id} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nList.propTypes = {\n  names: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Input from \"./components/Form/Input\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport styles from \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    if (!localStorage.getItem(\"contacts\")) return;\n    this.setState({ contacts: JSON.parse(localStorage.getItem(\"contacts\")) });\n  }\n  changeInput = (evt) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [evt.target.id]: evt.target.value,\n      };\n    });\n  };\n  deleteContact = (idOfEl) => {\n    this.setState((prevState) => {\n      prevState.contacts.find((el, index, arr) => {\n        if (el.id === idOfEl) {\n          arr.splice(index, 1);\n          return true;\n        } else {\n          return false;\n        }\n      });\n      return {\n        ...prevState,\n        contacts: [...prevState.contacts],\n      };\n    });\n  };\n\n  addContact = (evt, state) => {\n    console.log(this.state);\n    evt.preventDefault();\n    this.setState((prevState) => {\n      const id = uuidv4();\n      const name = state.name;\n      const number = state.number;\n      if (!name) return;\n      const dublicated = prevState.contacts.find((el) => {\n        return el.name === name;\n      });\n      if (!(dublicated === undefined)) {\n        alert(`You already add ${name}`);\n        return;\n      } else {\n        return {\n          ...prevState,\n          contacts: [\n            ...prevState.contacts,\n            {\n              id: id,\n              name: name,\n              number: number,\n            },\n          ],\n        };\n      }\n    });\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <Form addContact={this.addContact} />\n        {this.state.contacts.length > 0 && (\n          <Section title=\"Contacts\">\n            <Input name=\"filter\" changeInputForFilter={this.changeInput} />\n            <List\n              contacts={this.state.contacts}\n              filter={this.state.filter}\n              deleteContact={this.deleteContact}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}